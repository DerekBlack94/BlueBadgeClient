[{"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/App.js":"1","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Navbar/Navbar.jsx":"2","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Auth/Login.js":"3","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterIndex.js":"4","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Auth/Signup.js":"5","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterCreate.js":"6","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterEdit.js":"7","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterTable.js":"8","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Auth/Auth.jsx":"9","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/index.js":"10"},{"size":1291,"mtime":1606842043238,"results":"11","hashOfConfig":"12"},{"size":3365,"mtime":1606844575215,"results":"13","hashOfConfig":"12"},{"size":1439,"mtime":1606849414017,"results":"14","hashOfConfig":"12"},{"size":2016,"mtime":1606841728079,"results":"15","hashOfConfig":"12"},{"size":2061,"mtime":1606849429862,"results":"16","hashOfConfig":"12"},{"size":6248,"mtime":1606848938609,"results":"17","hashOfConfig":"12"},{"size":4995,"mtime":1606848545552,"results":"18","hashOfConfig":"12"},{"size":2396,"mtime":1606848321562,"results":"19","hashOfConfig":"12"},{"size":1053,"mtime":1606849393311,"results":"20","hashOfConfig":"12"},{"size":523,"mtime":1606843116502,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"lnkm0m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/App.js",["45","46","47"],"import React from 'react';\nimport {useState, useEffect} from 'react';\nimport Sitebar from './Components/Navbar/Navbar';\nimport {Button} from 'reactstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport Auth from './Components/Auth/Auth'\nimport CharacterIndex from './Components/Characters/CharacterIndex';\nimport './App.css';\n\n\nfunction App () {\n  const [sessionToken, setSessionToken] = useState('');\n  const [passIndex, setpassIndex] = useState(false);\n\n  useEffect(() => {\n    if(localStorage.getItem('token')){\n      setSessionToken(localStorage.getItem('token'));\n    }\n  }, [])\n  \n  const updateToken = (newToken) => {\n    localStorage.setItem('token', newToken);\n    setSessionToken(newToken);\n    console.log(sessionToken);\n  }\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken('');\n  }\n\n  //**need to have Auth set up before use */\n\n  const protectedViews = () => {\n    return (sessionToken === localStorage.getItem('token') ? <CharacterIndex token={sessionToken}/> : <Auth updateToken={updateToken}/> ) \n  }\n\n\n\n  return (\n    <div>\n    \n      <Sitebar clickLogout={clearToken}/>\n      {/* <Auth updateToken={updateToken}/> */}\n      {protectedViews()} \n      {/* <CharacterIndex token={sessionToken} /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Navbar/Navbar.jsx",["48","49","50","51","52","53","54","55","56","57","58","59","60"],"import './Navbar.css'\nimport React, {useState} from 'react';\n// import 'https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js'\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport { \n    Navbar,\n    NavbarBrand,\n    Collapse,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    Button,\n    NavLink,\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu,\n    Form,\n    FormControl,\n    Input,\n}  from 'reactstrap';\nimport CharacterTable from '../Characters/CharacterTable';\nimport CharacterCreate from '../Characters/CharacterCreate';\n\n\nconst Sitebar = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const toggle = () => setDropdownOpen(!dropdownOpen);\n    const toggle2 = () => {\n        setIsOpen(!isOpen);\n\n        let newIsOpen = !isOpen;\n        setIsOpen(newIsOpen);\n    }\n    return(\n        \n    <div className='parent'>\n\n        <Navbar light expand=\"md\">\n            {/* <NavbarBrand className=\"blue\"  href=\"/\"> EPIC CHARACTER CREATOR</NavbarBrand> */}\n            \n            <NavbarToggler onClick={toggle2}/>\n            <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" >\n                <NavItem>\n                    <NavLink className=\"blue\" href=\"/\">EPIC  CHARACTER CREATOR</NavLink>\n                </NavItem>\n                    \n                {/* <div className='dropdown'>\n                <Router>\n                    <div className='styling'>\n                    <NavItem>\n                        <Dropdown className=\"charDropdown\" nav isOpen={dropdownOpen} toggle={toggle}>\n                            <DropdownToggle nav caret>Characters</DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem header>Character Options</DropdownItem>\n                                <DropdownItem><Link to='/characters' >Browse Characters</Link></DropdownItem>\n                                <DropdownItem><Link to='/charactercreate'>Create Character</Link></DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem>Close</DropdownItem>\n                            </DropdownMenu>\n                        </Dropdown>\n                    </NavItem>\n                    </div>\n                </Router>\n                </div> */}\n\n                    \n                <NavItem>\n                    <NavLink className=\"invite\" to=\"/invite\">Invite Friends</NavLink>\n                </NavItem>\n        \n            </Nav>\n\n            <div className='search'>\n            <Form inline>\n                <Input type=\"text\" placeholder=\"Search Character\" className=\"mr-sm-2\" />\n                <Button className=\"infoBtn\" outline color=\"info\">Search </Button>\n            </Form>\n            </div>\n\n            <br/>\n                \n            <Button className=\"logoutBtn\" size=\"lg\"  onClick={props.clickLogout}>Logout</Button>\n            </Collapse>\n        </Navbar>\n    \n        {/* <Router>\n        <div className = 'navRoute'>\n        <Switch>\n            <Route exact path = '/characters'><CharacterTable /></Route>\n            <Route exact path = '/charactercreate'><CharacterCreate /></Route>\n        </Switch>\n        </div>\n        </Router> */}\n    </div>\n    )\n}\nexport default Sitebar;","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Auth/Login.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterIndex.js",["61"],"import React, {useState, useEffect} from 'react';\nimport { Container, Row, Col} from 'reactstrap'\nimport CharacterCreate from './CharacterCreate';\nimport CharacterTable from './CharacterTable';\nimport CharacterEdit from './CharacterEdit';\n\nconst CharacterIndex = (props) => {\n    const [characters, setCharacters] = useState([]);\n    const [updateActive, setUpdateActive] = useState(false);\n    const [characterToUpdate, setCharacterToUpdate] = useState({});\n\n    const fetchCharacters = () => {\n        fetch('https://the-epic-character-creator.herokuapp.com/character/', {\n            method: 'GET',\n            headers: new Headers ({\n                'Content-Type': 'application/json',\n                'Authorization' : props.token\n            })\n        }) \n            .then((res) => res.json())\n            .then((charData) => {\n                setCharacters(charData)\n        })\n    };\n\n    const editUpdateCharacter = (character) => {\n        setCharacterToUpdate(character);\n        console.log(character);\n    }\n\n\n    const updateOn = () => {\n        setUpdateActive(true);\n    }\n    \n    const updateOff = () => {\n        setUpdateActive(false);\n    }\n\n    useEffect(() => {\n            fetchCharacters();\n        }, [])\n\nreturn(\n    <div className='indexContainer'>\n        <Container>\n            <Row>\n\n                <Col md=\"8\">\n                    <CharacterTable characters={characters} editUpdateCharacter={editUpdateCharacter}\n                    updateOn={updateOn}\n                    fetchCharacters={fetchCharacters} token={props.token}/>\n                </Col>\n\n                <Col md=\"4\">\n                    <CharacterCreate fetchCharacters={fetchCharacters} token={props.token}/>\n                </Col>\n\n                {updateActive ? <CharacterEdit characterToUpdate={characterToUpdate}\n                updateOff={updateOff} token={props.token} fetchCharacters={fetchCharacters}/> : <></>}\n\n            </Row>\n        </Container>\n    </div>\n    );\n}\nexport default CharacterIndex;\n\n","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Auth/Signup.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterCreate.js",["62"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterEdit.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Characters/CharacterTable.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/Components/Auth/Auth.jsx",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/client/my-app/src/index.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":4,"column":9,"nodeType":"66","messageId":"67","endLine":4,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":13,"column":10,"nodeType":"66","messageId":"67","endLine":13,"endColumn":19},{"ruleId":"64","severity":1,"message":"69","line":13,"column":21,"nodeType":"66","messageId":"67","endLine":13,"endColumn":33},{"ruleId":"64","severity":1,"message":"70","line":4,"column":26,"nodeType":"66","messageId":"67","endLine":4,"endColumn":32},{"ruleId":"64","severity":1,"message":"71","line":4,"column":34,"nodeType":"66","messageId":"67","endLine":4,"endColumn":39},{"ruleId":"64","severity":1,"message":"72","line":4,"column":41,"nodeType":"66","messageId":"67","endLine":4,"endColumn":45},{"ruleId":"64","severity":1,"message":"73","line":4,"column":47,"nodeType":"66","messageId":"67","endLine":4,"endColumn":53},{"ruleId":"64","severity":1,"message":"74","line":7,"column":5,"nodeType":"66","messageId":"67","endLine":7,"endColumn":16},{"ruleId":"64","severity":1,"message":"75","line":14,"column":5,"nodeType":"66","messageId":"67","endLine":14,"endColumn":13},{"ruleId":"64","severity":1,"message":"76","line":14,"column":15,"nodeType":"66","messageId":"67","endLine":14,"endColumn":27},{"ruleId":"64","severity":1,"message":"77","line":14,"column":29,"nodeType":"66","messageId":"67","endLine":14,"endColumn":43},{"ruleId":"64","severity":1,"message":"78","line":14,"column":45,"nodeType":"66","messageId":"67","endLine":14,"endColumn":57},{"ruleId":"64","severity":1,"message":"79","line":16,"column":5,"nodeType":"66","messageId":"67","endLine":16,"endColumn":16},{"ruleId":"64","severity":1,"message":"80","line":19,"column":8,"nodeType":"66","messageId":"67","endLine":19,"endColumn":22},{"ruleId":"64","severity":1,"message":"81","line":20,"column":8,"nodeType":"66","messageId":"67","endLine":20,"endColumn":23},{"ruleId":"64","severity":1,"message":"82","line":26,"column":11,"nodeType":"66","messageId":"67","endLine":26,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":42,"column":12,"nodeType":"85","endLine":42,"endColumn":14,"suggestions":"86"},{"ruleId":"64","severity":1,"message":"87","line":1,"column":26,"nodeType":"66","messageId":"67","endLine":1,"endColumn":35},{"ruleId":"64","severity":1,"message":"88","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":23},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'passIndex' is assigned a value but never used.","'setpassIndex' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'NavbarBrand' is defined but never used.","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'FormControl' is defined but never used.","'CharacterTable' is defined but never used.","'CharacterCreate' is defined but never used.","'toggle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacters'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.",{"desc":"90","fix":"91"},"Update the dependencies array to be: [fetchCharacters]",{"range":"92","text":"93"},[1229,1231],"[fetchCharacters]"]