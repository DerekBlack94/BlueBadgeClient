[{"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\index.js":"1","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterTable.js":"2","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterCreate.js":"3","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Auth\\Signup.js":"4","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Auth\\Login.js":"5","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterEdit.js":"6","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterIndex.js":"7","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\App.js":"8","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\reportWebVitals.js":"9","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\helpers\\environment.js":"10","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Navbar\\Navbar.jsx":"11","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Auth\\Auth.jsx":"12"},{"size":502,"mtime":1606835551058,"results":"13","hashOfConfig":"14"},{"size":2068,"mtime":1606842130853,"results":"15","hashOfConfig":"14"},{"size":4831,"mtime":1606842105408,"results":"16","hashOfConfig":"14"},{"size":2102,"mtime":1606842518342,"results":"17","hashOfConfig":"14"},{"size":1467,"mtime":1606842078309,"results":"18","hashOfConfig":"14"},{"size":5111,"mtime":1606842114866,"results":"19","hashOfConfig":"14"},{"size":2069,"mtime":1606842121980,"results":"20","hashOfConfig":"14"},{"size":1204,"mtime":1606823178907,"results":"21","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"14"},{"size":281,"mtime":1606848495251,"results":"23","hashOfConfig":"14"},{"size":3413,"mtime":1606834027897,"results":"24","hashOfConfig":"14"},{"size":1014,"mtime":1606834027890,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"7ve4vb",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\index.js",["56"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n  // remove bootstrap once pushed??\r\n  \r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>\r\n \r\n  ,\r\n  document.getElementById('root')\r\n  \r\n);\r\n\r\nreportWebVitals();\r\n",["57","58"],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterTable.js",["59"]," import React from 'react';\r\n import {Table, Button} from 'reactstrap';\r\n import APIURL from '../../helpers/environment'\r\n\r\nconst CharacterTable = (props) => {\r\n    const deleteCharacter = ( character ) => {\r\n        fetch(`${APIURL}/character${character.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'appliction/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n        .then(() => props.fetchCharacter())\r\n    }\r\n\r\n    const characterMapper = () => {\r\n        return props.characters.map((character, index) => {\r\n            <tr key={index}>\r\n                <th scope='row'>{character.id}</th>\r\n                <td>{character.project_name}</td>\r\n                <td>{character.name}</td>\r\n                <td>{character.age}</td>\r\n                <td>{character.race}</td>\r\n                <td>{character.gender}</td>\r\n                <td>{character.character_description}</td>\r\n                <td>{character.background}</td>\r\n                <td>\r\n                    <Button color='warning' onClick={() => {props.editUpdateCharacter(character); props.updateOn()}} >Edit</Button>\r\n                    <Button color='danger' onClick={() => {deleteCharacter(character)}}>Delete</Button>\r\n                </td> \r\n            </tr>\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <h3>Character Display</h3> \r\n        <hr />\r\n            <Table striped>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Project Name</th>\r\n                        <th>Name</th>\r\n                        <th>Age</th>\r\n                        <th>Race</th>\r\n                        <th>Gender</th>\r\n                        <th>Description</th>\r\n                        <th>Background</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {characterMapper()}\r\n                </tbody>\r\n            </Table>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CharacterTable;\r\n","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterCreate.js",["60"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport APIURL from '../../helpers/environment'\r\n\r\nconst CharacterCreate = (props) => {\r\n    const [project_name, setProject_Name] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState();\r\n    const [race, setRace] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [character_description, setCharacter_Description] = useState('');\r\n    const [background, setBackground] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/character/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ character : {\r\n                project_name: project_name, name: name, age: age, race: race, gender: gender, character_description: character_description, background: background\r\n            }}),\r\n            headers: new Headers ({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                setProject_Name('');\r\n                setName('');\r\n                setAge();\r\n                setRace('');\r\n                setGender('');\r\n                setCharacter_Description('');\r\n                setBackground('');\r\n                props.fetchCharacters();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create a Character!</h3>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor='project_name'>Project Name:</Label>\r\n                    <br />\r\n                    <Input name='project_name' type='text' value={project_name} onChange={(e) => setProject_Name(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='name'>Name:</Label>\r\n                    <br />\r\n                    <Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='age'>Age:</Label>\r\n                    <br />\r\n                    <Input type='text' name='age' value={age} onChange={(e) => setAge(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='race'>Race:</Label>\r\n                    <br />\r\n                    <Input type='select' name='race' value={race} onChange={(e) => setRace(e.target.value)}>\r\n                        <option value=\"Human\">Human</option>\r\n                        <option value=\"HighElf\">High Elf</option>\r\n                        <option value=\"DarkElf\">Dark Elf</option>\r\n                        <option value=\"WoodElf\">Wood Elf</option>\r\n                        <option value=\"Dwarf\">Dwarf</option>\r\n                        <option value=\"Tiefling\">Tiefling</option>\r\n                        <option value=\"HalfOrc\">Half Orc</option>\r\n                        <option value=\"Hobbit\">Hobbit</option>\r\n                    </Input>\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='gender'>Gender:</Label>\r\n                    <br />\r\n                    <Input type='select' name='gender' value={gender} onChange={(e) => setGender(e.target.value)}>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"Nonbinary\">Nonbinary</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </Input>\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='character_description'>Character Description:</Label>\r\n                    <br />\r\n                    <Input type='textarea' name='character_description' value={character_description} onChange={(e) => setCharacter_Description(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='background'>Character Background:</Label>\r\n                    <br />\r\n                    <Input type='textarea'  name='background' value={background} onChange={(e) => setBackground(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n                \r\n                <Button type='submit' onSubmit={handleSubmit}>Create</Button>\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCreate\r\n",["61","62"],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Auth\\Signup.js",[],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Auth\\Login.js",[],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterEdit.js",[],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Characters\\CharacterIndex.js",["63","64","65","66","67"],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\App.js",["68"],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\helpers\\environment.js",["69"],"let APIURL =\"\";\r\n\r\nswitch (window.location.hostname) {\r\n    case \"localhost\" || '127.0.0.1':\r\n\r\n    APIURL = 'http://localhost:5432';\r\n    break;\r\n\r\n    case \"character-client.herokuapp.com/\":\r\n\r\n        APIURL = 'https://character-client.herokuapp.com/'\r\n}\r\nexport default APIURL;","C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Navbar\\Navbar.jsx",["70","71"],"C:\\Users\\13174\\Desktop\\blueBadgeProjectClient\\client\\my-app\\src\\Components\\Auth\\Auth.jsx",[],{"ruleId":"72","severity":1,"message":"73","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":23},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":18,"column":56,"nodeType":"82","messageId":"83","endLine":18,"endColumn":58},{"ruleId":"72","severity":1,"message":"84","line":1,"column":26,"nodeType":"74","messageId":"75","endLine":1,"endColumn":35},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"72","severity":1,"message":"87","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":22},{"ruleId":"72","severity":1,"message":"88","line":9,"column":12,"nodeType":"74","messageId":"75","endLine":9,"endColumn":22},{"ruleId":"72","severity":1,"message":"89","line":27,"column":11,"nodeType":"74","messageId":"75","endLine":27,"endColumn":30},{"ruleId":"72","severity":1,"message":"90","line":33,"column":11,"nodeType":"74","messageId":"75","endLine":33,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":43,"column":12,"nodeType":"93","endLine":43,"endColumn":14,"suggestions":"94"},{"ruleId":"72","severity":1,"message":"95","line":4,"column":9,"nodeType":"74","messageId":"75","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":3,"column":1,"nodeType":"98","messageId":"99","endLine":12,"endColumn":2},{"ruleId":"72","severity":1,"message":"100","line":7,"column":5,"nodeType":"74","messageId":"75","endLine":7,"endColumn":16},{"ruleId":"72","severity":1,"message":"101","line":16,"column":5,"nodeType":"74","messageId":"75","endLine":16,"endColumn":16},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.",["102"],["103"],"'CharacterTable' is defined but never used.","'characters' is assigned a value but never used.","'editUpdateCharacter' is assigned a value but never used.","'updateOn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacters'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'Button' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'NavbarBrand' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [fetchCharacters]",{"range":"107","text":"108"},[1278,1280],"[fetchCharacters]"]