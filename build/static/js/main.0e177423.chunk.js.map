{"version":3,"sources":["helpers/environment.js","Components/Characters/CharacterTable.js","Components/Characters/CharacterCreate.js","Components/Navbar/Navbar.jsx","Components/Auth/Signup.js","Components/Auth/Login.js","Components/Auth/Auth.jsx","Components/Characters/CharacterEdit.js","Components/Characters/CharacterIndex.js","App.js","reportWebVitals.js","index.js"],"names":["APIURL","window","location","hostname","CharacterTable","props","className","Table","striped","characters","map","character","index","scope","id","project_name","name","age","race","gender","character_description","background","image","Button","onClick","editUpdateCharacter","updateOn","fetch","method","headers","Headers","token","then","fetchCharacters","deleteCharacter","CharacterCreate","useState","setProject_Name","setName","setAge","setRace","setGender","setCharacter_Description","setBackground","preview","raw","setImage","handleSubmit","event","preventDefault","body","JSON","stringify","res","json","console","log","handleUpload","e","a","formData","FormData","append","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","value","onChange","target","toString","src","alt","width","height","style","display","files","length","URL","createObjectURL","Sitebar","light","expand","Nav","NavItem","NavLink","href","to","inline","placeholder","outline","color","size","clickLogout","Signup","username","setUsername","password","setPassword","firstName","setFirstName","lastName","setLastName","user","response","data","updateToken","sessionToken","Login","Auth","Container","Row","Col","md","CharacterEdit","characterToUpdate","editPN","setEditPN","editName","setEditName","editAge","setEditAge","editRace","setEditRace","editGender","setEditGender","editCD","setEditCD","editBG","setEditBG","Modal","isOpen","ModalHeader","ModalBody","updateOff","CharacterIndex","setCharacters","updateActive","setUpdateActive","setCharacterToUpdate","charData","useEffect","App","setSessionToken","localStorage","getItem","newToken","setItem","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e177423.chunk.js","sourcesContent":["let APIURL =\"\"\n\nswitch (window.location.hostname) {\n    case \"localhost\" || '127.0.0.1':\n\n    APIURL = 'http://localhost:5432';\n    break;\n\n    case \"edk-character-creator-client.herokuapp.com\":\n\n        APIURL = 'https://edk-character-creator.herokuapp.com'\n}\nexport default APIURL;","\nimport React from 'react';\nimport {Table, Button} from 'reactstrap';\nimport APIURL from '../../helpers/environment'\n\nconst CharacterTable = (props) => {\n    const deleteCharacter = (character) => {\n        fetch(`${APIURL}/character/${character.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'appliction/json',\n                'Authorization': props.token\n            })\n        })\n        .then(() => props.fetchCharacters())\n    }\n\n\n    const characterMapper = () => {\n        return props.characters.map((character, index) => {\n            const imageViewer = () => {\n                character.image != null ? <a href={character.image} target='blank'>Click to View</a> : <div></div>\n            }\n\n            return(\n            <tr key={index}>\n                <th scope='row'>{character.id}</th>\n                <td>{character.project_name}</td>\n                <td>{character.name}</td>\n                <td>{character.age}</td>\n                <td>{character.race}</td>\n                <td>{character.gender}</td>\n                <td>{character.character_description}</td>\n                <td>{character.background}</td>\n                <td>{imageViewer()}</td>\n\n                <td>\n                    <Button className='editBtn' onClick={() => {props.editUpdateCharacter(character); props.updateOn()}} >Edit</Button>\n                    <Button className='deleteBtn' onClick={() => {deleteCharacter(character)}}>Delete</Button>\n                </td> \n            </tr>\n            )\n        })\n\n    }\n\n\n\n\n\nreturn(\n\n    <div className='tableContainer'>\n        <h3>Characters</h3> \n        <hr />\n            <div className='characters'>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Project Name</th>\n                        <th>Name</th>\n                        <th>Age</th>\n                        <th>Race</th>\n                        <th>Gender</th>\n                        <th>Description</th>\n                        <th>Background</th>\n                        <th>Image</th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {characterMapper()}\n                </tbody>\n            </Table>\n            </div>\n\n    </div>\n    );\n}\n\n\nexport default CharacterTable;\n","import React, {useState, useEffect} from 'react';\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\nimport APIURL from '../../helpers/environment'\n\n\nconst CharacterCreate = (props) => {\n    const [project_name, setProject_Name] = useState('');\n    const [name, setName] = useState('');\n    const [age, setAge] = useState();\n    const [race, setRace] = useState('');\n    const [gender, setGender] = useState('');\n    const [character_description, setCharacter_Description] = useState('');\n    const [background, setBackground] = useState('');\n\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(`${APIURL}/character/create`, {\n            method: 'POST',\n            body: JSON.stringify({ character : {\n                project_name: project_name, name: name, age: age, race: race, gender: gender, character_description: character_description, background: background, image: image\n\n            }}),\n            headers: new Headers ({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        })\n            .then((res) => res.json())\n            .then((json) => {\n                console.log(json);\n                setProject_Name('');\n                setName('');\n                setAge('');\n                setRace('');\n                setGender('');\n                setCharacter_Description('');\n                setBackground('');\n                props.fetchCharacters();\n            })\n    }\n\n\n    const handleChange = e => {\n        if (e.target.files.length) {\n            setImage({\n            preview: URL.createObjectURL(e.target.files[0]),\n            raw: e.target.files[0]\n            });\n        }\n    };\n\n    const handleUpload = async e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"image\", image.raw);\n\n        await fetch(`${APIURL}/character/create`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            },\n            body: formData\n        });\n    };\n\n    return (\n        <div className='createContainer'>\n            <h3>Create a Character!</h3>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Label htmlFor='project_name'>Project Name:</Label>\n                    <br />\n                    <Input name='project_name' type='text' value={project_name} onChange={(e) => setProject_Name(e.target.value)} />\n                </FormGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Label htmlFor='name'>Name:</Label>\n                    <br />\n                    <Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\n                </FormGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Label htmlFor='age'>Age:</Label>\n                    <br />\n                    <Input type='text' name='age' value={age} onChange={(e) => setAge(e.target.value)} />\n                </FormGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Label htmlFor='race'>Race:</Label>\n                    <br />\n                    <Input type='select' name='race' value={race} onChange={(e) => setRace(e.target.value.toString())}>\n                        <option value='null'>Please pick a Race</option>\n                        <option value=\"Human\">Human</option>\n                        <option value=\"High Elf\">High Elf</option>\n                        <option value=\"Dark Elf\">Dark Elf</option>\n                        <option value=\"Wood Elf\">Wood Elf</option>\n                        <option value=\"Dwarf\">Dwarf</option>\n                        <option value=\"Tiefling\">Tiefling</option>\n                        <option value=\"Half Orc\">Half Orc</option>\n                        <option value=\"Hobbit\">Hobbit</option>\n                    </Input>\n                </FormGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Label htmlFor='gender'>Gender:</Label>\n                    <br />\n                    <Input type='select' name='gender' value={gender} onChange={(e) => setGender(e.target.value.toString())}>\n                        <option value='null'>Please pick a Gender</option>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                        <option value=\"Nonbinary\">Nonbinary</option>\n                        <option value=\"Other\">Other</option>\n                    </Input>\n                </FormGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Label htmlFor='character_description'>Character Description:</Label>\n                    <br />\n                    <Input type='textarea' name='character_description' value={character_description} onChange={(e) => setCharacter_Description(e.target.value)} />\n                </FormGroup>\n\n                <br />\n\n                <FormGroup>\n                    <Label htmlFor='background'>Character Background:</Label>\n                    <br />\n                    <Input type='textarea'  name='background' value={background} onChange={(e) => setBackground(e.target.value)} />\n                </FormGroup>\n\n                <br />\n                \n                <Button type='submit' onSubmit={handleSubmit}>Create</Button>\n\n                <label htmlFor=\"upload-button\">\n                    {image.preview ? (\n                        <img src={image.preview} alt=\"dummy\" width=\"300\" height=\"300\" />\n                    ) : (\n                    <>\n                        <span className=\"fa-stack fa-2x mt-3 mb-2\">\n                            <i className=\"fas fa-circle fa-stack-2x\" />\n                            <i className=\"fas fa-store fa-stack-1x fa-inverse\" />\n                        </span>\n                    </>\n                    )}\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"upload-button\"\n                    style={{ display: \"none\" }}\n                    onChange={handleChange}\n                />\n\n                <Button onClick={handleUpload}>Upload Image</Button>\n\n\n            </Form>\n        </div>\n    )\n}\n\nexport default CharacterCreate\n","import './Navbar.css'\nimport React, {useState} from 'react';\n// import 'https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js'\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport { \n    Navbar,\n    NavbarBrand,\n    Collapse,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    Button,\n    NavLink,\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu,\n    Form,\n    FormControl,\n    Input,\n}  from 'reactstrap';\nimport CharacterTable from '../Characters/CharacterTable';\nimport CharacterCreate from '../Characters/CharacterCreate';\n\n\nconst Sitebar = (props) => {\n    // const [isOpen, setIsOpen] = useState(false);\n\n    // const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    // const toggle = () => setDropdownOpen(!dropdownOpen);\n\n    // const toggle2 = () => {\n    //     setIsOpen(!isOpen);\n\n    //     let newIsOpen = !isOpen;\n    //     setIsOpen(newIsOpen);\n    // }\n\n    // const toggleSearch = () => {\n    //     (props.sessionToken === localStorage.getItem('token') ? \n    //     <Form inline>\n    //         <Input type=\"text\" placeholder=\"Search Character\" className=\"mr-sm-2\" />\n    //         <Button className=\"infoBtn\" outline color=\"info\">Search </Button>\n    //     </Form> : <div></div>)\n    // }\n\n    return(\n        \n    <div className='parent'>\n\n\n        <Navbar light expand=\"md\">\n\n            {/* <NavbarBrand className=\"blue\"  href=\"/\"> EPIC CHARACTER CREATOR</NavbarBrand> */}\n            \n            {/* <NavbarToggler onClick={toggle2}/>\n            <Collapse isOpen={isOpen} navbar> */}\n            <Nav className=\"mr-auto\" >\n                <NavItem>\n                    <NavLink className=\"blue\" href=\"/\">EPIC  CHARACTER CREATOR</NavLink>\n                </NavItem>\n                    \n\n                {/* <div className='dropdown'>\n\n                <Router>\n                    <div className='styling'>\n                    <NavItem>\n                        <Dropdown className=\"charDropdown\" nav isOpen={dropdownOpen} toggle={toggle}>\n                            <DropdownToggle nav caret>Characters</DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem header>Character Options</DropdownItem>\n                                <DropdownItem><Link to='/characters' >Browse Characters</Link></DropdownItem>\n                                <DropdownItem><Link to='/charactercreate'>Create Character</Link></DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem>Close</DropdownItem>\n                            </DropdownMenu>\n                        </Dropdown>\n                    </NavItem>\n                    </div>\n                </Router>\n                </div> */}\n\n\n                    \n                <NavItem>\n                    <NavLink className=\"invite\" to=\"/invite\">Invite Friends</NavLink>\n                </NavItem>\n        \n            </Nav>\n\n\n            <div className='search'>\n                <Form inline>\n                    <Input type=\"text\" placeholder=\"Search Character\" className=\"mr-sm-2\" />\n                    <Button className=\"infoBtn\" outline color=\"info\">Search </Button>\n                </Form>\n                {/* {toggleSearch()} */}\n            </div>\n\n            <br/>\n                \n            <Button className=\"logoutBtn\" size=\"lg\"  onClick={props.clickLogout}>Logout</Button>\n            {/* </Collapse> */}\n        </Navbar>\n    \n        {/* <Router>\n\n        <div className = 'navRoute'>\n        <Switch>\n            <Route exact path = '/characters'><CharacterTable /></Route>\n            <Route exact path = '/charactercreate'><CharacterCreate /></Route>\n        </Switch>\n        </div>\n        </Router> */}\n\n    </div>\n    )\n}\nexport default Sitebar;","import React, {useState} from 'react';\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport APIURL from '../../helpers/environment'\n\n\n\n\nconst Signup = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        fetch(`${APIURL}/user/create`, {\n\n            method: 'POST',\n            body: JSON.stringify({user:{firstName: firstName, lastName: lastName, username: username, password: password}}),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then(\n            (response) => response.json()\n        ).then((data) => {\n            props.updateToken(data.sessionToken)\n        })\n    }\n\n    return(\n        <div>\n            <h1>Sign Up</h1>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Label htmlFor=\"firstName\">First Name</Label>\n                    <Input onChange={(e) => setFirstName(e.target.value)} name=\"firstName\" value={firstName}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"lastName\">Last Name</Label>\n                    <Input onChange={(e) => setLastName(e.target.value)} name=\"lastName\" value={lastName}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"username\">Username</Label>\n                    <Input onChange={(e) => setUsername(e.target.value)} name=\"username\" value={username}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"password\">Password</Label>\n                    <Input onChange={(e) => setPassword(e.target.value)} type='password' name=\"password\" value={password}/>\n                </FormGroup>\n                <Button className='signupBtn' type=\"submit\">Signup</Button>\n\n            </Form>\n        </div>\n    )\n}\n\n\n\nexport default Signup;","import React, {useState} from 'react';\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport APIURL from '../../helpers/environment'\n\n\nconst Login = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        fetch(`${APIURL}/user/login`, {\n\n            method: 'POST',\n            body: JSON.stringify({user:{username: username, password: password}}),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            props.updateToken(data.sessionToken)\n        })\n    }\n\n    return(\n        <div>\n            <h1>Login</h1>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Label htmlFor=\"username\">Username</Label>\n                    <Input onChange={(e) => setUsername(e.target.value)} name=\"username\" value={username}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"password\">Password</Label>\n                    <Input onChange={(e) => setPassword(e.target.value)} type='password' name=\"password\" value={password}/>\n                </FormGroup>\n\n                <Button className='loginBtn' type=\"submit\">Login</Button>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport Signup from './Signup';\nimport Login from './Login';\nimport {Container, Row, Col} from 'reactstrap';\nimport './Auth.css'\n\n\nconst Auth = (props) => {\n    console.log(props)\n    return(\n        <Container className=\"auth-container\">\n            <Row>\n\n                <Col md=\"5\" className='signup-col'>\n                    <Signup updateToken={props.updateToken}/>\n                </Col>\n                <Col md='1'></Col>\n                <Col md=\"5\" className=\"login-col\">\n\n                    <Login updateToken={props.updateToken}/>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n// import Signup from './Signup';\n// import Login from './Login';\n\n// const Auth = () => {\n//     return (\n//         <Container>\n//             <Row>\n//                 <Col md=\"6\">\n//                     <Signup />\n//                 </Col>\n//                 <Col md=\"6\">\n//                     <Login />\n//                 </Col>\n//             </Row>\n//         </Container>\n//     )\n// }\n\nexport default Auth;","import React, {useState} from 'react';\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport APIURL from '../../helpers/environment'\n\n\nconst CharacterEdit = (props) => {\n    const [editPN, setEditPN] = useState(props.characterToUpdate.project_name);\n    const [editName, setEditName] = useState(props.characterToUpdate.name);\n    const [editAge, setEditAge] = useState(props.characterToUpdate.age);\n    const [editRace, setEditRace] = useState(props.characterToUpdate.race);\n    const [editGender, setEditGender] = useState(props.characterToUpdate.gender);\n    const [editCD, setEditCD] = useState(props.characterToUpdate.character_description);\n    const [editBG, setEditBG] = useState(props.characterToUpdate.background);\n\n    const characterUpdate = (event, character) => {\n        event.preventDefault();\n\n        fetch(`${APIURL}/character/${props.characterToUpdate.id}`, {\n\n            method: 'PUT',\n            body: JSON.stringify({character: {\n                project_name: editPN, name: editName, age: editAge, race: editRace, gender: editGender, character_description: editCD, background: editBG\n            }}),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        })\n        .then((res) => {\n            props.fetchCharacters();\n            props.updateOff();\n        })\n    }\n\n    return (\n        <div>\n            <Modal isOpen={true}>\n                <ModalHeader>Edit Your Character</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={characterUpdate}>\n                        <FormGroup>\n                            <Label htmlFor='project_name'>Edit Project Name</Label>\n                            <Input name='project_name' value={editPN} onChange={(e) => setEditPN(e.target.value)} />\n                        </FormGroup>\n\n                        <br />\n\n                        <FormGroup>\n                            <Label htmlFor='name'>Edit Name:</Label>\n                            <Input type='text' name='name' value={editName} onChange={(e) => setEditName(e.target.value)} />\n                        </FormGroup>\n\n                        <br />\n\n                        <FormGroup>\n                            <Label htmlFor='age'>Edit Age:</Label>\n                            <Input type='text' name='age' value={editAge} onChange={(e) => setEditAge(e.target.value)} />\n                        </FormGroup>\n\n                        <br />\n\n                        <FormGroup>\n                            <Label htmlFor='race'>Edit Race:</Label>\n                            <Input type='select' name='race' value={editRace} onChange={(e) => setEditRace(e.target.value)}>\n                                <option value=\"Human\">Human</option>\n                                <option value=\"HighElf\">High Elf</option>\n                                <option value=\"DarkElf\">Dark Elf</option>\n                                <option value=\"WoodElf\">Wood Elf</option>\n                                <option value=\"Dwarf\">Dwarf</option>\n                                <option value=\"Tiefling\">Tiefling</option>\n                                <option value=\"HalfOrc\">Half Orc</option>\n                                <option value=\"Hobbit\">Hobbit</option>\n                            </Input>\n                        </FormGroup>\n\n                        <br />\n\n                        <FormGroup>\n                            <Label htmlFor='gender'>Edit Gender:</Label>\n                            <Input type='select' name='gender' value={editGender} onChange={(e) => setEditGender(e.target.value)}>\n                                <option value=\"Male\">Male</option>\n                                <option value=\"Female\">Female</option>\n                                <option value=\"Nonbinary\">Nonbinary</option>\n                                <option value=\"Other\">Other</option>\n                            </Input>\n                        </FormGroup>\n\n                        <br />\n\n                        <FormGroup>\n                            <Label htmlFor='character_description'>Edit Character Description:</Label>\n                            <Input type='textarea' name='character_description' value={editCD} onChange={(e) => setEditCD(e.target.value)} />\n                        </FormGroup>\n\n                        <br />\n\n                        <FormGroup>\n                            <Label htmlFor='background'>Edit Character Background:</Label>\n                            <Input type='textarea'  name='background' value={editBG} onChange={(e) => setEditBG(e.target.value)} />\n                        </FormGroup>\n\n                        <br />\n                \n                        <Button type='submit'>Submit Edited Character</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CharacterEdit\n","import React, {useState, useEffect} from 'react';\nimport { Container, Row, Col} from 'reactstrap'\nimport CharacterCreate from './CharacterCreate';\nimport CharacterTable from './CharacterTable';\nimport CharacterEdit from './CharacterEdit';\nimport APIURL from '../../helpers/environment'\n\n\nconst CharacterIndex = (props) => {\n    const [characters, setCharacters] = useState([]);\n    const [updateActive, setUpdateActive] = useState(false);\n    const [characterToUpdate, setCharacterToUpdate] = useState({});\n\n    const fetchCharacters = () => {\n\n        fetch(`${APIURL}/character`, {\n            method: 'GET',\n            headers: new Headers ({\n                'Content-Type': 'application/json',\n                'Authorization' : props.token\n            })\n        }) \n            .then((res) => res.json())\n            .then((charData) => {\n                setCharacters(charData)\n        })\n    };\n\n    const editUpdateCharacter = (character) => {\n        setCharacterToUpdate(character);\n        console.log(character);\n    }\n\n\n    const updateOn = () => {\n        setUpdateActive(true);\n    }\n    \n    const updateOff = () => {\n        setUpdateActive(false);\n    }\n\n    useEffect(() => {\n            fetchCharacters();\n        }, [])\n\nreturn(\n\n    <div className='indexContainer'>\n        <Container>\n            <Row>\n                <CharacterTable characters={characters} editUpdateCharacter={editUpdateCharacter} updateOn={updateOn} fetchCharacters={fetchCharacters} token={props.token}/>\n            </Row>\n            <Row>\n                <CharacterCreate fetchCharacters={fetchCharacters} token={props.token}/>\n            </Row>\n                \n                {updateActive ? <CharacterEdit characterToUpdate={characterToUpdate}\n                updateOff={updateOff} token={props.token} fetchCharacters={fetchCharacters}/> : <></>}\n        </Container>\n    </div>\n    );\n}\nexport default CharacterIndex;\n\n","import React from 'react';\nimport {useState, useEffect} from 'react';\nimport Sitebar from './Components/Navbar/Navbar';\nimport {Button} from 'reactstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport Auth from './Components/Auth/Auth'\nimport CharacterIndex from './Components/Characters/CharacterIndex';\nimport './App.css';\n\n\n\nfunction App () {\n  const [sessionToken, setSessionToken] = useState('');\n\n  useEffect(() => {\n    if(localStorage.getItem('token')){\n      setSessionToken(localStorage.getItem('token'));\n    }\n  }, [])\n  \n  const updateToken = (newToken) => {\n    localStorage.setItem('token', newToken);\n    setSessionToken(newToken);\n    console.log(sessionToken);\n  }\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken('');\n  }\n\n  //**need to have Auth set up before use */\n\n  const protectedViews = () => {\n    return (sessionToken === localStorage.getItem('token') ? <CharacterIndex token={sessionToken}/> : <Auth updateToken={updateToken}/> ) \n  }\n\n  return (\n    <div>\n    \n      <Sitebar clickLogout={clearToken} sessionToken={sessionToken} />\n      {/* <Auth updateToken={updateToken}/> */}\n      {protectedViews()} \n      {/* <CharacterIndex token={sessionToken} /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n  // remove bootstrap once pushed??\n  \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <div className='reactOverride'>\n      <App />\n    </div>\n\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n\n);\n\nreportWebVitals();\n"],"sourceRoot":""}