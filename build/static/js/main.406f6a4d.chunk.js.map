{"version":3,"sources":["helpers/environment.js","Components/Characters/CharacterTable.js","Components/Characters/CharacterCreate.js","Components/Navbar/Navbar.jsx","Components/Characters/CharacterEdit.js","Components/Characters/CharacterIndex.js","Components/Auth/Signup.js","Components/Auth/Login.js","Components/Auth/Auth.jsx","App.js","reportWebVitals.js","index.js"],"names":["APIURL","window","location","hostname","CharacterTable","props","Table","striped","characters","map","character","index","id","project_name","name","age","race","gender","character_description","background","Button","CharacterCreate","useState","setProject_Name","setName","setAge","setRace","setGender","setCharacter_Description","setBackground","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","Headers","token","then","res","json","console","log","fetchCharacters","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","value","onChange","e","target","Sitebar","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","className","color","light","expand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","Dropdown","nav","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","header","to","divider","inline","placeholder","outline","size","clickLogout","exact","path","CharacterEdit","characterToUpdate","editPN","setEditPN","editName","setEditName","editAge","setEditAge","editRace","setEditRace","editGender","setEditGender","editCD","setEditCD","editBG","setEditBG","Modal","ModalHeader","ModalBody","updateOff","CharacterIndex","setCharacters","updateActive","setUpdateActive","charData","useEffect","Container","Row","Col","md","Signup","username","setUsername","password","setPassword","firstName","setFirstName","lastName","setLastName","user","response","data","updateToken","sessionToken","Login","Auth","App","setSessionToken","localStorage","getItem","newToken","setItem","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406f6a4d.chunk.js","sourcesContent":["let APIURL =\"\";\r\n\r\nswitch (window.location.hostname) {\r\n    case \"localhost\" || '127.0.0.1':\r\n\r\n    APIURL = 'http://localhost:5432';\r\n    break;\r\n\r\n    case \"character-client.herokuapp.com/\":\r\n\r\n        APIURL = 'https://character-client.herokuapp.com/'\r\n}\r\nexport default APIURL;"," import React from 'react';\r\n import {Table, Button} from 'reactstrap';\r\n import APIURL from '../../helpers/environment'\r\n\r\nconst CharacterTable = (props) => {\r\n    const deleteCharacter = ( character ) => {\r\n        fetch(`${APIURL}/character${character.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'appliction/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n        .then(() => props.fetchCharacter())\r\n    }\r\n\r\n    const characterMapper = () => {\r\n        return props.characters.map((character, index) => {\r\n            <tr key={index}>\r\n                <th scope='row'>{character.id}</th>\r\n                <td>{character.project_name}</td>\r\n                <td>{character.name}</td>\r\n                <td>{character.age}</td>\r\n                <td>{character.race}</td>\r\n                <td>{character.gender}</td>\r\n                <td>{character.character_description}</td>\r\n                <td>{character.background}</td>\r\n                <td>\r\n                    <Button color='warning' onClick={() => {props.editUpdateCharacter(character); props.updateOn()}} >Edit</Button>\r\n                    <Button color='danger' onClick={() => {deleteCharacter(character)}}>Delete</Button>\r\n                </td> \r\n            </tr>\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <h3>Character Display</h3> \r\n        <hr />\r\n            <Table striped>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Project Name</th>\r\n                        <th>Name</th>\r\n                        <th>Age</th>\r\n                        <th>Race</th>\r\n                        <th>Gender</th>\r\n                        <th>Description</th>\r\n                        <th>Background</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {characterMapper()}\r\n                </tbody>\r\n            </Table>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CharacterTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport APIURL from '../../helpers/environment'\r\n\r\nconst CharacterCreate = (props) => {\r\n    const [project_name, setProject_Name] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState();\r\n    const [race, setRace] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [character_description, setCharacter_Description] = useState('');\r\n    const [background, setBackground] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/character/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ character : {\r\n                project_name: project_name, name: name, age: age, race: race, gender: gender, character_description: character_description, background: background\r\n            }}),\r\n            headers: new Headers ({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                setProject_Name('');\r\n                setName('');\r\n                setAge();\r\n                setRace('');\r\n                setGender('');\r\n                setCharacter_Description('');\r\n                setBackground('');\r\n                props.fetchCharacters();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create a Character!</h3>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor='project_name'>Project Name:</Label>\r\n                    <br />\r\n                    <Input name='project_name' type='text' value={project_name} onChange={(e) => setProject_Name(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='name'>Name:</Label>\r\n                    <br />\r\n                    <Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='age'>Age:</Label>\r\n                    <br />\r\n                    <Input type='text' name='age' value={age} onChange={(e) => setAge(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='race'>Race:</Label>\r\n                    <br />\r\n                    <Input type='select' name='race' value={race} onChange={(e) => setRace(e.target.value)}>\r\n                        <option value=\"Human\">Human</option>\r\n                        <option value=\"HighElf\">High Elf</option>\r\n                        <option value=\"DarkElf\">Dark Elf</option>\r\n                        <option value=\"WoodElf\">Wood Elf</option>\r\n                        <option value=\"Dwarf\">Dwarf</option>\r\n                        <option value=\"Tiefling\">Tiefling</option>\r\n                        <option value=\"HalfOrc\">Half Orc</option>\r\n                        <option value=\"Hobbit\">Hobbit</option>\r\n                    </Input>\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='gender'>Gender:</Label>\r\n                    <br />\r\n                    <Input type='select' name='gender' value={gender} onChange={(e) => setGender(e.target.value)}>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"Nonbinary\">Nonbinary</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </Input>\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='character_description'>Character Description:</Label>\r\n                    <br />\r\n                    <Input type='textarea' name='character_description' value={character_description} onChange={(e) => setCharacter_Description(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='background'>Character Background:</Label>\r\n                    <br />\r\n                    <Input type='textarea'  name='background' value={background} onChange={(e) => setBackground(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <br />\r\n                \r\n                <Button type='submit' onSubmit={handleSubmit}>Create</Button>\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCreate\r\n","import './Navbar.css'\r\nimport React, {useState} from 'react';\r\n// import 'https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js'\r\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\r\nimport { \r\n    Navbar,\r\n    NavbarBrand,\r\n    Collapse,\r\n    NavbarToggler,\r\n    Nav,\r\n    NavItem,\r\n    Button,\r\n    NavLink,\r\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu,\r\n    Form,\r\n    FormControl,\r\n    Input,\r\n}  from 'reactstrap';\r\nimport CharacterTable from '../Characters/CharacterTable';\r\nimport CharacterCreate from '../Characters/CharacterCreate';\r\n\r\n\r\nconst Sitebar = (props) => {\r\n    const[isOpen, setIsOpen] = useState(false);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n    const toggle2 = () => {\r\n        setIsOpen(!isOpen);\r\n\r\n        let newIsOpen = !isOpen;\r\n        setIsOpen(newIsOpen);\r\n    }\r\n    return(\r\n        \r\n    <div className='parent'>\r\n\r\n        <Navbar color=\"dark\" light expand=\"md\">\r\n            {/* <NavbarBrand className=\"blue\"  href=\"/\"> EPIC CHARACTER CREATOR</NavbarBrand> */}\r\n            \r\n            <NavbarToggler onClick={toggle2}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" >\r\n                <NavItem>\r\n                    <NavLink className=\"blue\" href=\"/\">EPIC  CHARACTER CREATOR</NavLink>\r\n                </NavItem>\r\n                    \r\n                <div className='dropdown'>\r\n                <Router>\r\n                    <div className='styling'>\r\n                    <NavItem>\r\n                        <Dropdown className=\"charDropdown\" nav isOpen={dropdownOpen} toggle={toggle}>\r\n                            <DropdownToggle nav caret>Characters</DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem header>Character Options</DropdownItem>\r\n                                <DropdownItem><Link to='/characters' >Browse Characters</Link></DropdownItem>\r\n                                <DropdownItem><Link to='/charactercreate'>Create Character</Link></DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>Close</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </NavItem>\r\n                    </div>\r\n                </Router>\r\n                </div>\r\n\r\n                    \r\n                <NavItem>\r\n                    <NavLink className=\"invite\" to=\"/invite\">Invite Friends</NavLink>\r\n                </NavItem>\r\n        \r\n            </Nav>\r\n\r\n            <Form inline>\r\n                <Input type=\"text\" placeholder=\"Search Character\" className=\"mr-sm-2\" />\r\n                <Button className=\"infoBtn\" outline color=\"info\">Search </Button>\r\n            </Form>\r\n\r\n            <br/>\r\n                \r\n            <Button className=\"logoutBtn\" size=\"lg\" color=\"danger\" onClick={props.clickLogout}>Logout</Button>\r\n            </Collapse>\r\n        </Navbar>\r\n    \r\n        <Router>\r\n        <div className = 'navRoute'>\r\n        <Switch>\r\n            <Route exact path = '/characters'><CharacterTable /></Route>\r\n            <Route exact path = '/charactercreate'><CharacterCreate /></Route>\r\n        </Switch>\r\n        </div>\r\n        </Router>\r\n    </div>\r\n    )\r\n}\r\nexport default Sitebar;","import React, {useState} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport APIURL from '../../helpers/environment'\r\n\r\nconst CharacterEdit = (props) => {\r\n    const [editPN, setEditPN] = useState(props.characterToUpdate.project_name);\r\n    const [editName, setEditName] = useState(props.characterToUpdate.name);\r\n    const [editAge, setEditAge] = useState(props.characterToUpdate.age);\r\n    const [editRace, setEditRace] = useState(props.characterToUpdate.race);\r\n    const [editGender, setEditGender] = useState(props.characterToUpdate.gender);\r\n    const [editCD, setEditCD] = useState(props.characterToUpdate.character_description);\r\n    const [editBG, setEditBG] = useState(props.characterToUpdate.background);\r\n\r\n    const characterUpdate = (event, character) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/character${props.characterToUpdate.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({character: {\r\n                project_name: editPN, name: editName, age: editAge, race: editRace, gender: editGender, character_description: editCD, background: editBG\r\n            }}),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n        .then((res) => {\r\n            props.fetchCharacters();\r\n            props.updateOff();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>Edit Your Character</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={characterUpdate}>\r\n                        <FormGroup>\r\n                            <Label htmlFor='project_name'>Edit Project Name</Label>\r\n                            <Input name='project_name' value={editPN} onChange={(e) => setEditPN(e.target.value)} />\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor='name'>Edit Name:</Label>\r\n                            <Input type='text' name='name' value={editName} onChange={(e) => setEditName(e.target.value)} />\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor='age'>Edit Age:</Label>\r\n                            <Input type='text' name='age' value={editAge} onChange={(e) => setEditAge(e.target.value)} />\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor='race'>Edit Race:</Label>\r\n                            <Input type='select' name='race' value={editRace} onChange={(e) => setEditRace(e.target.value)}>\r\n                                <option value=\"Human\">Human</option>\r\n                                <option value=\"HighElf\">High Elf</option>\r\n                                <option value=\"DarkElf\">Dark Elf</option>\r\n                                <option value=\"WoodElf\">Wood Elf</option>\r\n                                <option value=\"Dwarf\">Dwarf</option>\r\n                                <option value=\"Tiefling\">Tiefling</option>\r\n                                <option value=\"HalfOrc\">Half Orc</option>\r\n                                <option value=\"Hobbit\">Hobbit</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor='gender'>Edit Gender:</Label>\r\n                            <Input type='select' name='gender' value={editGender} onChange={(e) => setEditGender(e.target.value)}>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Nonbinary\">Nonbinary</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor='character_description'>Edit Character Description:</Label>\r\n                            <Input type='textarea' name='character_description' value={editCD} onChange={(e) => setEditCD(e.target.value)} />\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n\r\n                        <FormGroup>\r\n                            <Label htmlFor='background'>Edit Character Background:</Label>\r\n                            <Input type='textarea'  name='background' value={editBG} onChange={(e) => setEditBG(e.target.value)} />\r\n                        </FormGroup>\r\n\r\n                        <br />\r\n                \r\n                        <Button type='submit'>Submit Edited Character</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterEdit\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Container, Row, Col} from 'reactstrap'\r\nimport CharacterCreate from './CharacterCreate';\r\nimport CharacterTable from './CharacterTable';\r\nimport CharacterEdit from './CharacterEdit';\r\nimport APIURL from '../../helpers/environment'\r\n\r\nconst CharacterIndex = (props) => {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [updateActive, setUpdateActive] = useState(false);\r\n    const [characterToUpdate, setCharacterToUpdate] = useState({});\r\n\r\n    const fetchCharacters = () => {\r\n        fetch(`${APIURL}/character`, {\r\n            method: 'GET',\r\n            headers: new Headers ({\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : props.token\r\n            })\r\n        }) \r\n            .then((res) => res.json())\r\n            .then((charData) => {\r\n                setCharacters(charData)\r\n        })\r\n    };\r\n\r\n    const editUpdateCharacter = (character) => {\r\n        setCharacterToUpdate(character);\r\n        console.log(character);\r\n    }\r\n\r\n\r\n    const updateOn = () => {\r\n        setUpdateActive(true);\r\n    }\r\n    \r\n    const updateOff = () => {\r\n        setUpdateActive(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n            fetchCharacters();\r\n        }, [])\r\n\r\nreturn(\r\n    <div>\r\n        <Container>\r\n            <Row>\r\n\r\n                <Col md=\"6\">\r\n                    <CharacterCreate fetchCharacters={fetchCharacters} token={props.token}/>\r\n                </Col>\r\n                <Col md=\"9\">\r\n                    {/* <CharacterTable characters={characters} editUpdateCharacter={editUpdateCharacter}\r\n                    updateOn={updateOn}\r\n                    fetchCharacters={fetchCharacters} token={props.token}/> */}\r\n                </Col>\r\n                {updateActive ? <CharacterEdit characterToUpdate={characterToUpdate}\r\n                updateOff={updateOff} token={props.token} fetchCharacters={fetchCharacters}/> : <></>}\r\n\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    );\r\n}\r\nexport default CharacterIndex;\r\n\r\n","import React, {useState} from 'react';\r\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport APIURL from '../../helpers/environment'\r\n\r\n\r\n\r\nconst Signup = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/user/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({user:{firstName: firstName, lastName: lastName, username: username, password: password}}),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }).then(\r\n            (response) => response.json()\r\n        ).then((data) => {\r\n            props.updateToken(data.sessionToken)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Sign Up</h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"firstName\">First Name</Label>\r\n                    <Input onChange={(e) => setFirstName(e.target.value)} name=\"firstName\" value={firstName}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"lastName\">Last Name</Label>\r\n                    <Input onChange={(e) => setLastName(e.target.value)} name=\"lastName\" value={lastName}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"username\">Username</Label>\r\n                    <Input onChange={(e) => setUsername(e.target.value)} name=\"username\" value={username}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <Input onChange={(e) => setPassword(e.target.value)} name=\"password\" value={password}/>\r\n                </FormGroup>\r\n                <Button type=\"submit\">Signup</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Signup;","import React, {useState} from 'react';\r\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport APIURL from '../../helpers/environment'\r\n\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/user/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({user:{username: username, password: password}}),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }).then(\r\n            (response) => response.json()\r\n        ).then((data) => {\r\n            props.updateToken(data.sessionToken)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"username\">Username</Label>\r\n                    <Input onChange={(e) => setUsername(e.target.value)} name=\"username\" value={username}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <Input onChange={(e) => setPassword(e.target.value)} name=\"password\" value={password}/>\r\n                </FormGroup>\r\n                <Button type=\"submit\">Login</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Signup from './Signup';\r\nimport Login from './Login';\r\nimport {Container, Row, Col} from 'reactstrap';\r\n\r\nconst Auth = (props) => {\r\n    console.log(props)\r\n    return(\r\n        <Container className=\"auth-container\">\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Signup updateToken={props.updateToken}/>\r\n                </Col>\r\n                <Col md=\"6\" className=\"login-col\">\r\n                    <Login updateToken={props.updateToken}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n// import Signup from './Signup';\r\n// import Login from './Login';\r\n\r\n// const Auth = () => {\r\n//     return (\r\n//         <Container>\r\n//             <Row>\r\n//                 <Col md=\"6\">\r\n//                     <Signup />\r\n//                 </Col>\r\n//                 <Col md=\"6\">\r\n//                     <Login />\r\n//                 </Col>\r\n//             </Row>\r\n//         </Container>\r\n//     )\r\n// }\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport Sitebar from './Components/Navbar/Navbar';\r\nimport {Button} from 'reactstrap';\r\nimport CharacterIndex from './Components/Characters/CharacterIndex';\r\nimport Auth from \"./Components/Auth/Auth\";\r\n\r\n\r\nfunction App () {\r\n  const [sessionToken, setSessionToken] = useState('');\r\n  useEffect(() => {\r\n    if(localStorage.getItem('token')){\r\n      setSessionToken(localStorage.getItem('token'));\r\n    }\r\n  }, [])\r\n  \r\n  const updateToken = (newToken) => {\r\n    localStorage.setItem('token', newToken);\r\n    setSessionToken(newToken);\r\n    console.log(sessionToken);\r\n  }\r\n  const clearToken = () => {\r\n    localStorage.clear();\r\n    setSessionToken('');\r\n  }\r\n\r\n  //**need to have Auth set up before use */\r\n\r\n  const protectedViews = () => {\r\n    return (sessionToken === localStorage.getItem('token') ? <CharacterIndex token={sessionToken}/>\r\n    : <Auth updateToken={updateToken}/> ) \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <Sitebar clickLogout={clearToken}/>\r\n      <Auth updateToken={updateToken}/>\r\n      {protectedViews()}  \r\n      <CharacterIndex token={sessionToken} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n  // remove bootstrap once pushed??\r\n  \r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>\r\n \r\n  ,\r\n  document.getElementById('root')\r\n  \r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}