[{"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/index.js":"1","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Auth/Auth.jsx":"2","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterEdit.js":"3","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/App.js":"4","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterTable.js":"5","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterCreate.js":"6","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Navbar/Navbar.jsx":"7","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/helpers/environment.js":"8","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/reportWebVitals.js":"9","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Auth/Login.js":"10","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Auth/Signup.js":"11","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterIndex.js":"12"},{"size":525,"mtime":1606923824050,"results":"13","hashOfConfig":"14"},{"size":1056,"mtime":1606923823165,"results":"15","hashOfConfig":"14"},{"size":5006,"mtime":1606941390101,"results":"16","hashOfConfig":"14"},{"size":1266,"mtime":1606927427541,"results":"17","hashOfConfig":"14"},{"size":2406,"mtime":1606951632928,"results":"18","hashOfConfig":"14"},{"size":6481,"mtime":1606951610669,"results":"19","hashOfConfig":"14"},{"size":3816,"mtime":1606940304707,"results":"20","hashOfConfig":"14"},{"size":283,"mtime":1606928813773,"results":"21","hashOfConfig":"14"},{"size":362,"mtime":1606923824054,"results":"22","hashOfConfig":"14"},{"size":1464,"mtime":1606926357577,"results":"23","hashOfConfig":"14"},{"size":2063,"mtime":1606949705999,"results":"24","hashOfConfig":"14"},{"size":1924,"mtime":1606942097589,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"scd7oc",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/index.js",["60"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n  // remove bootstrap once pushed??\n  \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <div className='reactOverride'>\n      <App />\n    </div>\n\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n\n);\n\nreportWebVitals();\n",["61","62"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Auth/Auth.jsx",[],["63","64"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterEdit.js",[],["65","66"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/App.js",["67"],"import React from 'react';\nimport {useState, useEffect} from 'react';\nimport Sitebar from './Components/Navbar/Navbar';\nimport {Button} from 'reactstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport Auth from './Components/Auth/Auth'\nimport CharacterIndex from './Components/Characters/CharacterIndex';\nimport './App.css';\n\n\n\nfunction App () {\n  const [sessionToken, setSessionToken] = useState('');\n\n  useEffect(() => {\n    if(localStorage.getItem('token')){\n      setSessionToken(localStorage.getItem('token'));\n    }\n  }, [])\n  \n  const updateToken = (newToken) => {\n    localStorage.setItem('token', newToken);\n    setSessionToken(newToken);\n    console.log(sessionToken);\n  }\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken('');\n  }\n\n  //**need to have Auth set up before use */\n\n  const protectedViews = () => {\n    return (sessionToken === localStorage.getItem('token') ? <CharacterIndex token={sessionToken}/> : <Auth updateToken={updateToken}/> ) \n  }\n\n  return (\n    <div>\n    \n      <Sitebar clickLogout={clearToken} sessionToken={sessionToken} />\n      {/* <Auth updateToken={updateToken}/> */}\n      {protectedViews()} \n      {/* <CharacterIndex token={sessionToken} /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterTable.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterCreate.js",["68"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Navbar/Navbar.jsx",["69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import './Navbar.css'\nimport React, {useState} from 'react';\n// import 'https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js'\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport { \n    Navbar,\n    NavbarBrand,\n    Collapse,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    Button,\n    NavLink,\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu,\n    Form,\n    FormControl,\n    Input,\n}  from 'reactstrap';\nimport CharacterTable from '../Characters/CharacterTable';\nimport CharacterCreate from '../Characters/CharacterCreate';\n\n\nconst Sitebar = (props) => {\n    // const [isOpen, setIsOpen] = useState(false);\n\n    // const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    // const toggle = () => setDropdownOpen(!dropdownOpen);\n\n    // const toggle2 = () => {\n    //     setIsOpen(!isOpen);\n\n    //     let newIsOpen = !isOpen;\n    //     setIsOpen(newIsOpen);\n    // }\n\n    // const toggleSearch = () => {\n    //     (props.sessionToken === localStorage.getItem('token') ? \n    //     <Form inline>\n    //         <Input type=\"text\" placeholder=\"Search Character\" className=\"mr-sm-2\" />\n    //         <Button className=\"infoBtn\" outline color=\"info\">Search </Button>\n    //     </Form> : <div></div>)\n    // }\n\n    return(\n        \n    <div className='parent'>\n\n\n        <Navbar light expand=\"md\">\n\n            {/* <NavbarBrand className=\"blue\"  href=\"/\"> EPIC CHARACTER CREATOR</NavbarBrand> */}\n            \n            {/* <NavbarToggler onClick={toggle2}/>\n            <Collapse isOpen={isOpen} navbar> */}\n            <Nav className=\"mr-auto\" >\n                <NavItem>\n                    <NavLink className=\"blue\" href=\"/\">EPIC  CHARACTER CREATOR</NavLink>\n                </NavItem>\n                    \n\n                {/* <div className='dropdown'>\n\n                <Router>\n                    <div className='styling'>\n                    <NavItem>\n                        <Dropdown className=\"charDropdown\" nav isOpen={dropdownOpen} toggle={toggle}>\n                            <DropdownToggle nav caret>Characters</DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem header>Character Options</DropdownItem>\n                                <DropdownItem><Link to='/characters' >Browse Characters</Link></DropdownItem>\n                                <DropdownItem><Link to='/charactercreate'>Create Character</Link></DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem>Close</DropdownItem>\n                            </DropdownMenu>\n                        </Dropdown>\n                    </NavItem>\n                    </div>\n                </Router>\n                </div> */}\n\n\n                    \n                <NavItem>\n                    <NavLink className=\"invite\" to=\"/invite\">Invite Friends</NavLink>\n                </NavItem>\n        \n            </Nav>\n\n\n            <div className='search'>\n                <Form inline>\n                    <Input type=\"text\" placeholder=\"Search Character\" className=\"mr-sm-2\" />\n                    <Button className=\"infoBtn\" outline color=\"info\">Search </Button>\n                </Form>\n                {/* {toggleSearch()} */}\n            </div>\n\n            <br/>\n                \n            <Button className=\"logoutBtn\" size=\"lg\"  onClick={props.clickLogout}>Logout</Button>\n            {/* </Collapse> */}\n        </Navbar>\n    \n        {/* <Router>\n\n        <div className = 'navRoute'>\n        <Switch>\n            <Route exact path = '/characters'><CharacterTable /></Route>\n            <Route exact path = '/charactercreate'><CharacterCreate /></Route>\n        </Switch>\n        </div>\n        </Router> */}\n\n    </div>\n    )\n}\nexport default Sitebar;","/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/helpers/environment.js",["84"],"let APIURL =\"\"\n\nswitch (window.location.hostname) {\n    case \"localhost\" || '127.0.0.1':\n\n    APIURL = 'http://localhost:5432';\n    break;\n\n    case \"edk-character-creator-client.herokuapp.com\":\n\n        APIURL = 'https://edk-character-creator.herokuapp.com'\n}\nexport default APIURL;",["85","86"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/reportWebVitals.js",[],["87","88"],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Auth/Login.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Auth/Signup.js",[],"/Users/Emory/Documents/WDOctober2020/Assignments/Projects/BlueBadgeFinal/BlueBadgeClient/src/Components/Characters/CharacterIndex.js",["89","90"],"import React, {useState, useEffect} from 'react';\nimport { Container, Row, Col} from 'reactstrap'\nimport CharacterCreate from './CharacterCreate';\nimport CharacterTable from './CharacterTable';\nimport CharacterEdit from './CharacterEdit';\nimport APIURL from '../../helpers/environment'\n\n\nconst CharacterIndex = (props) => {\n    const [characters, setCharacters] = useState([]);\n    const [updateActive, setUpdateActive] = useState(false);\n    const [characterToUpdate, setCharacterToUpdate] = useState({});\n\n    const fetchCharacters = () => {\n\n        fetch(`${APIURL}/character`, {\n            method: 'GET',\n            headers: new Headers ({\n                'Content-Type': 'application/json',\n                'Authorization' : props.token\n            })\n        }) \n            .then((res) => res.json())\n            .then((charData) => {\n                setCharacters(charData)\n        })\n    };\n\n    const editUpdateCharacter = (character) => {\n        setCharacterToUpdate(character);\n        console.log(character);\n    }\n\n\n    const updateOn = () => {\n        setUpdateActive(true);\n    }\n    \n    const updateOff = () => {\n        setUpdateActive(false);\n    }\n\n    useEffect(() => {\n            fetchCharacters();\n        }, [])\n\nreturn(\n\n    <div className='indexContainer'>\n        <Container>\n            <Row>\n                <CharacterTable characters={characters} editUpdateCharacter={editUpdateCharacter} updateOn={updateOn} fetchCharacters={fetchCharacters} token={props.token}/>\n            </Row>\n            <Row>\n                <CharacterCreate fetchCharacters={fetchCharacters} token={props.token}/>\n            </Row>\n                \n                {updateActive ? <CharacterEdit characterToUpdate={characterToUpdate}\n                updateOff={updateOff} token={props.token} fetchCharacters={fetchCharacters}/> : <></>}\n        </Container>\n    </div>\n    );\n}\nexport default CharacterIndex;\n\n",{"ruleId":"91","severity":1,"message":"92","line":10,"column":10,"nodeType":"93","messageId":"94","endLine":10,"endColumn":23},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"91","severity":1,"message":"103","line":4,"column":9,"nodeType":"93","messageId":"94","endLine":4,"endColumn":15},{"ruleId":"91","severity":1,"message":"104","line":1,"column":26,"nodeType":"93","messageId":"94","endLine":1,"endColumn":35},{"ruleId":"91","severity":1,"message":"105","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":24},{"ruleId":"91","severity":1,"message":"106","line":4,"column":26,"nodeType":"93","messageId":"94","endLine":4,"endColumn":32},{"ruleId":"91","severity":1,"message":"107","line":4,"column":34,"nodeType":"93","messageId":"94","endLine":4,"endColumn":39},{"ruleId":"91","severity":1,"message":"108","line":4,"column":41,"nodeType":"93","messageId":"94","endLine":4,"endColumn":45},{"ruleId":"91","severity":1,"message":"109","line":4,"column":47,"nodeType":"93","messageId":"94","endLine":4,"endColumn":53},{"ruleId":"91","severity":1,"message":"110","line":7,"column":5,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"111","line":8,"column":5,"nodeType":"93","messageId":"94","endLine":8,"endColumn":13},{"ruleId":"91","severity":1,"message":"112","line":9,"column":5,"nodeType":"93","messageId":"94","endLine":9,"endColumn":18},{"ruleId":"91","severity":1,"message":"113","line":14,"column":5,"nodeType":"93","messageId":"94","endLine":14,"endColumn":13},{"ruleId":"91","severity":1,"message":"114","line":14,"column":15,"nodeType":"93","messageId":"94","endLine":14,"endColumn":27},{"ruleId":"91","severity":1,"message":"115","line":14,"column":29,"nodeType":"93","messageId":"94","endLine":14,"endColumn":43},{"ruleId":"91","severity":1,"message":"116","line":14,"column":45,"nodeType":"93","messageId":"94","endLine":14,"endColumn":57},{"ruleId":"91","severity":1,"message":"117","line":16,"column":5,"nodeType":"93","messageId":"94","endLine":16,"endColumn":16},{"ruleId":"91","severity":1,"message":"118","line":19,"column":8,"nodeType":"93","messageId":"94","endLine":19,"endColumn":22},{"ruleId":"91","severity":1,"message":"119","line":20,"column":8,"nodeType":"93","messageId":"94","endLine":20,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":3,"column":1,"nodeType":"122","messageId":"123","endLine":12,"endColumn":2},{"ruleId":"95","replacedBy":"124"},{"ruleId":"97","replacedBy":"125"},{"ruleId":"95","replacedBy":"126"},{"ruleId":"97","replacedBy":"127"},{"ruleId":"91","severity":1,"message":"128","line":2,"column":26,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":45,"column":12,"nodeType":"131","endLine":45,"endColumn":14,"suggestions":"132"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],"'Button' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'NavbarBrand' is defined but never used.","'Collapse' is defined but never used.","'NavbarToggler' is defined but never used.","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'FormControl' is defined but never used.","'CharacterTable' is defined but never used.","'CharacterCreate' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["133"],["134"],["133"],["134"],"'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacters'. Either include it or remove the dependency array.","ArrayExpression",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [fetchCharacters]",{"range":"138","text":"139"},[1238,1240],"[fetchCharacters]"]
